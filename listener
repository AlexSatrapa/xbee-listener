#!/usr/bin/env python

from xbee import XBee, ZigBee
import serial
import argparse
import json
import binascii
import re
from datetime import datetime

# Note: set the coordinator XBee API Output Mode to "explicit", AO=0

strip_leading_nonprintables = re.compile("^[^\w]+")
strip_trailing_nonprintables = re.compile("[^!\w]+$")

def interpretFrame(frame):
	interpreted_frame = {}
	current_time = datetime.utcnow().strftime("%Y%m%dT%H%M%S")
	non_hex_items = ['id', 'rf_data', 'node_id']
	for item in frame.keys():
		if item in non_hex_items:
			interpreted_frame[item] = frame[item]
		else:
			interpreted_frame[item] = binascii.hexlify(frame[item])
	interpreted_frame['timestamp'] = current_time
	return interpreted_frame

parser = argparse.ArgumentParser(description='Monitor a ZigBee network.')
parser.add_argument('port', help='The serial port the ZigBee is connected to.')
parser.add_argument('--speed', help='The bit rate of the serial port.', default=115200)
args = parser.parse_args()

port_string = args.port
port_speed = args.speed

serial_port = serial.Serial(port_string, port_speed)
xbee = ZigBee(serial_port)
while True:
	try:
		escaped_frame = {}
		frame = xbee.wait_read_frame()
		interpreted = interpretFrame(frame)
		if (interpreted.has_key('rf_data')):
			interpreted['rf_data'] = strip_leading_nonprintables.sub('', interpreted['rf_data'])
			interpreted['rf_data'] = strip_trailing_nonprintables.sub('', interpreted['rf_data'])
		print json.dumps(interpreted, encoding="utf8")
	except KeyboardInterrupt:
		break
	except UnicodeDecodeError:
		print "Could not decode {stuff} as UTF-8.\n".format(stuff=interpreted)
serial_port.close()
